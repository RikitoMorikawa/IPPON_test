# This is a basic workflow to help you get started with Actions

name: Deploy to AWS S3

# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the "main" branch
#  push:
#    branches:
#      - main

# Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    
permissions:
  id-token: write
  contents: read

env:
  AWS_ROLE_ARN: arn:aws:iam::040433403151:role/prod-ippon-deploy-role
  AWS_REGION: ap-northeast-1
  S3_BUCKET: prod-ippon-trading-s3-bucket-login
  CLOUDFRONT_DISTRIBUTION_ID: E2E9H6IE9L6FNQ
  VITE_API_URL: ${{ secrets.VITE_API_URL }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_and_sync_to_s3:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          #cache-dependency-path: ./package-lock.json
      - name: Install dependencies
        run: npm install
      - name: Create .env file
        run: |
          echo "VITE_API_URL=${VITE_API_URL}" > .env
      - name: Build
        run: npm run build
        env:
          NODE_OPTIONS: --max-old-space-size=4096
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: deploy-session
      - name: Sync artifact to S3
        run: aws s3 sync dist/ s3://${{ env.S3_BUCKET }}/ --delete --exact-timestamps

  cloudfront-cache-clear:
    needs: build_and_sync_to_s3
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: deploy-session
      - name: Cloudfront Cache Clear
        run: aws cloudfront create-invalidation --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
